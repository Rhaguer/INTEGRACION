trigger:
- main

variables:
  azureSubscription: 'MiConexionAzureRM'
  appName: 'mi-funcion-feriados'
  vmImageName: 'ubuntu-latest'
  feriadosApiUrl: 'https://mi-funcion-feriados.azurewebsites.net/api/CheckDate'
  packagePath: '$(Build.ArtifactStagingDirectory)/functionapp.zip'

pool:
  vmImage: $(vmImageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.9'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Instalar dependencias'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveFile: '$(packagePath)'
    replaceExistingArchive: true
  displayName: 'Crear paquete'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(packagePath)'
    artifactName: 'drop'
  displayName: 'Publicar artefactos'

- task: AzureFunctionApp@2
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: functionAppLinux
    appName: '$(appName)'
    package: '$(packagePath)'
    deploymentMethod: 'auto'
  displayName: 'Desplegar Azure Function'

- script: |
    sprintDate=$(date +'%Y-%m-%d')
    response=$(curl -s "$(feriadosApiUrl)?date=$sprintDate")
    echo "##vso[task.setvariable variable=esFeriado]$response"
  displayName: 'Validar feriado a trav√©s del API'

- script: |
    if [ "$esFeriado" = "true" ]; then
      echo "Es feriado, deteniendo pipeline"
      exit 1
    else
      echo "No es feriado, continua pipeline"
    fi
  displayName: 'Evaluar y bloquear si es feriado'
